//Deobfuscated with CENSORED

// 
// Decompiled by Procyon v0.5.36
// 

package cat.yoink.dream.impl.module.exploit;

import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import cat.yoink.dream.impl.event.MovementUtils;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import cat.yoink.dream.api.setting.SettingType;
import cat.yoink.dream.api.module.Category;
import cat.yoink.dream.api.setting.Setting;
import cat.yoink.dream.api.module.Module;

public class LavaFlight extends Module
{
    private final Setting hSpeed;
    private final Setting ySpeed;
    
    public LavaFlight(final String name, final String description, final Category category) {
        super(name, description, category);
        this.hSpeed = new Setting.Builder(SettingType.INTEGER).setName("H Speed").setModule(this).setIntegerValue(10).setMinIntegerValue(1).setMaxIntegerValue(25).build();
        this.ySpeed = new Setting.Builder(SettingType.INTEGER).setName("Y Speed").setModule(this).setIntegerValue(10).setMinIntegerValue(1).setMaxIntegerValue(25).build();
        this.addSetting(this.hSpeed);
        this.addSetting(this.ySpeed);
    }
    
    @SubscribeEvent
    public void onTick(final TickEvent.ClientTickEvent event) {
        if (this.mc.player == null) {
            return;
        }
        if (this.mc.gameSettings.keyBindJump.isKeyDown()) {
            this.mc.player.motionY = this.ySpeed.getIntegerValue() / 10;
        }
        else if (this.mc.gameSettings.keyBindSneak.isKeyDown()) {
            this.mc.player.motionY = this.ySpeed.getIntegerValue() / 10 * -1;
        }
        else {
            this.mc.player.motionY = 0.0;
        }
        double yaw = MovementUtils.calcMoveYaw(this.mc.player.rotationYaw);
        double motX = 0.0;
        double motZ = 0.0;
        yaw -= this.mc.player.moveStrafing * 90.0f;
        if (this.mc.gameSettings.keyBindBack.isKeyDown() && !this.mc.gameSettings.keyBindForward.isKeyDown()) {
            motX = -Math.sin(yaw) * this.hSpeed.getIntegerValue() / 10.0 * -1.0;
            motZ = Math.cos(yaw) * this.hSpeed.getIntegerValue() / 10.0 * -1.0;
        }
        else if (this.mc.gameSettings.keyBindForward.isKeyDown()) {
            motX = -Math.sin(yaw) * this.hSpeed.getIntegerValue() / 10.0;
            motZ = Math.cos(yaw) * this.hSpeed.getIntegerValue() / 10.0;
        }
        this.mc.player.motionX = motX;
        this.mc.player.motionZ = motZ;
        if (this.mc.player.moveStrafing == 0.0f && this.mc.player.moveForward == 0.0f) {
            this.mc.player.motionX = 0.0;
            this.mc.player.motionZ = 0.0;
        }
    }
}
